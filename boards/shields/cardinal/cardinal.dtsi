

#include <dt-bindings/zmk/matrix_transform.h>

/ {

	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk, matrix-transform";
		columns = <12>;
		rows = <5>;

        // --------------------------------------------------------------------------------------------------------------------------------------------------------------------
        // Example layout from the schematic, we start at -1 column up to 5, with the posibility to remove the -1 column
        // then we have 3 main rows, 1 row dedicated for the thumb and 1 row for the 5 way. This is almost a perfect matrix and we could in theory get 2 extra switches from the matrix
        // In the opt spaces can be either the 5 way switch or a rotary encoder EWQDG from panasonic, with native support for 2 encoders or 1 encoder + 5 way switch, or you could handwire it #yolo
        // We map the 5 way switch in a funky way, because i can
        //         -1         1        2         3         4         5
         

		map = <
		    RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)                     RC(0,6)  RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10) RC(0,11)
		    RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)                     RC(1,6)  RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10) RC(1,11)
		    RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(3,4)  RC(3,7)   RC(2,6)  RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10) RC(2,11)
		                               RC(3,3)  RC(3,1)  RC(3,2)  RC(3,0)  RC(3,11)  RC(3,9)  RC(3,10) RC(3,8)
                              RC(5,1)                                                                           RC(5,10)
                     RC(5,3)  RC(5,5)  RC(5,4)                                                         RC(5,8)  RC(5,6)  RC(5,7)               
                              RC(5,2)                                                                           RC(5,9)
                                                       
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
		row-gpios
		    = <&pro_micro 3  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> 
		    , <&pro_micro 4  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&pro_micro 5  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> //row for 5 way
		    ;
	};

	encoder_left_h: encoder_left_h {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    encoder_left_v: encoder_left_v {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    encoder_right_h: encoder_right_h {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    encoder_right_v: encoder_right_v {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

	sensors {
        compatible = "zmk,keymap-sensors";
        sensors = 
                    < &encoder_left_h
                     &encoder_left_v
                     &encoder_right_h
                     &encoder_right_v
                >;
        triggers-per-rotation = <20>;
    };

};
/*
*&pinctrl {
*    spi2_default: spi2_default {
*        group1 {
*            psels = <NRF_PSEL(SPIM_SCK, 0, 27)>,
*                    <NRF_PSEL(SPIM_MOSI, 0, 8)>,
*                    <NRF_PSEL(SPIM_MISO, 0, 22)>;
*        };
*    };
*};
*
*&pro_micro_i2c {
*    status = "okay";
*    
*    oled: ssd1306@3c {
*        compatible = "solomon,ssd1306fb";
*        reg = <0x3c>;
*        width = <128>;
*        height = <32>;
*        segment-offset = <0>;
*        page-offset = <0>;
*        display-offset = <0>;
*        multiplex-ratio = <31>;
*        segment-remap;
*        com-invdir;
*        com-sequential;
*        prechargep = <0x22>;
*    };
*};
*/